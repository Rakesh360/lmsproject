script code 



    const formAttributes = document.getElementById("formAttributes");

    function changeEnrollmentStatus(event) {
      if (event.target.value == 'enrolled') {
          formAttributes.innerHTML = `
          <div class="row"> 
            <div class="col-md-4">
              <label>Start Date</label>
              <input class="form-control" value="{{values_for_search.start_date}}" name="start_date" type="date">
            </div>
            <div class="col-md-8 mt-4">                    
                <div class="select-box">
                    <div class="options-container">
                        {% for course_package in  courses %}
                            <div class="option" onclick="includeTag(event)">
                                <input style="pointer-events: none;" type="checkbox" name="category" id="{{course_package.uid}}">
                                <label for="{{course_package.uid}}">{{course_package.package_title}}</label>
                            </div>
                        {% endfor  %}
            
                      
                    </div>
            
                    <div class="selected">
                      Choose Packages to include
                    </div>
            
                    <div class="search-box">
                        <input type="text" placeholder="Start Typing..." />
                    </div>
                     
                </div>
            </div> 
            
          </div>
          <div class="row">
            <div class="col-md-4 mt-2">
              <label>End Date</label>
              <input class="form-control" value="{{values_for_search.end_date}}" name="end_date" type="date">
            </div>
            <div class="col-md-8 mt-2">
              <div class="table table-striped" style="margin: 1%;">
                <table class="display">
                    <tbody id="tags">
                    
                    </tbody>
                </table>  
              </div> 
            </div>
          </div>
          
          `;

          loadDropdownSelect();

      } else if(event.target.value == 'un-enrolled') {
        formAttributes.innerHTML = `
          <div class="row">
            <div class="col-md-6">
                <label>Name/Phone/Course Interested</label>
                <input type="text" name="search" value="{{values_for_search.search}}" class="form-control">
            </div>
          </div>
        `;

      } else {
        formAttributes.innerHTML = ``;
      }
    };


    document.getElementById("form").addEventListener('submit', e => {
      e.preventDefault();
      const mode = document.getElementById("enroll").value;
      if (mode == 'enrolled') {

        // get array of all selected Packages uid
        let allTags = document.getElementsByClassName('tag');
        let allPackageDates = document.getElementsByClassName('packageDate');
        let packagesUid = [];
        for (let i = 0; i < allTags.length; i++) {
            packagesUid.push(allTags[i].id);
        };

        // procedd further

      } else {

      }
    })

    let tags;
    function loadDropdownSelect () {
      // script for package include dropdown starts

    tags = document.getElementById("tags");
    var selected = document.querySelector(".selected");
    var selectBox = document.querySelector(".select-box");
    const optionsContainer = document.querySelector(".options-container");
    const searchBox = document.querySelector(".search-box input");
    const optionsList = document.querySelectorAll(".option");

    selected.addEventListener("click", () => {
    optionsContainer.classList.toggle("active");

    searchBox.value = "";
    filterList("");

    if (optionsContainer.classList.contains("active")) {
        searchBox.focus();
    }
    });
    document.addEventListener('click', function(event) {
        var isClickInsideElement = selectBox.contains(event.target);
        if (!isClickInsideElement) {
            //Do something click is outside specified element
            optionsContainer.classList.remove("active");
        }
    });

    optionsList.forEach(o => {
    o.addEventListener("click", (e) => {
        // selected.innerHTML = o.querySelector("label").innerHTML;
        // optionsContainer.classList.remove("active");
        let checkbox = e.target.firstElementChild;
        if (checkbox === null) {
        return;
        }

        if (checkbox.checked === false) {
        checkbox.checked = true;
        } else {
        checkbox.checked = false;
        };

        console.log(selectedItems());

    });
    });

    searchBox.addEventListener("keyup", function(e) {
    filterList(e.target.value);
    });

    const filterList = searchTerm => {
    searchTerm = searchTerm.toLowerCase();
    optionsList.forEach(option => {
        let label = option.firstElementChild.nextElementSibling.innerText.toLowerCase();
        if (label.indexOf(searchTerm) != -1) {
        option.style.display = "block";
        } else {
        option.style.display = "none";
        }
    });
    };

    function selectedItems() {
    var selectedArray = [];
    var selectedCheckboxes = document.querySelectorAll(".option input[type='checkbox']"); 
    var correspondingLabels = document.querySelectorAll(".option label");
    for (var i = 0; i < selectedCheckboxes.length; i++) {
        if (selectedCheckboxes[i].checked) {
        selectedArray.push([selectedCheckboxes[i].id, correspondingLabels[i].innerText]);
        }
    };
    return selectedArray;
    };



    }
    function includeTag(event) {
        const packageUid = event.target.firstElementChild.id;
        const packageName = event.target.querySelector("label").innerText;

        if (checkTag(packageName) === true ) {
            console.log('Tag already exists...');
            deleteTag(packageUid);
        } else {
            let tagElement = document.createElement('tr');
            // tagElement.className = "badge badge-dark p-1 m-1 tag";
            let td1 = document.createElement('td');
            td1.className = "tag";
            td1.innerHTML = packageName;
            td1.id = packageUid;
            tagElement.appendChild(td1);
            tags.appendChild(tagElement);
        }


    };

    function deleteTag(packageUid) {
        let allSelectedPackages = document.querySelectorAll(".tag");
        for (var i = 0; i < allSelectedPackages.length; i++) {
            if (allSelectedPackages[i].id === packageUid) {
                allSelectedPackages[i].parentElement.remove();
            }
        }
    };


    function checkTag(tagName) {
        let allTags = document.getElementsByClassName('tag');
        let flag = false;
        for (let i = 0; i < allTags.length; i++) {
            let singleTag = allTags[i];
            if (singleTag.innerHTML === tagName) {
                flag = true;
                break;
            }

        }

        return flag;
    }

    function clickTag(event) {
        let tagName = event.target.innerHTML;
        let tagId = event.target.id;
        console.log(tagName, tagId);
    }
    // script for package include dropdown ends
    function parseDate(date) {
        var date = new Date(date);
        var year = date.getFullYear();
        var month = date.getMonth() + 1;
        var day = date.getDate();
        // hours in two character format
        var hour = date.getHours() <= 9 ? "0" + date.getHours() : date.getHours();
        var min = date.getMinutes() <= 9 ? "0" + date.getMinutes() : date.getMinutes();
        // var sec = date.getSeconds();
        var dateString = year + "-" + month + "-" + day + "T" + hour + ":" + min;
        return dateString;

    }